version: '2'
services:
  app:
    image: university:latest
    build:
      context: .
    container_name: app
    links:
      - elastic
    networks:
      - elk-network
    ports:
      - "8080:8080"
    depends_on:
      - elastic
      - postgres
      - redis
    command: ["sh", "./wait-for-it.sh"]
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/compose-postgres
      - SPRING_DATASOURCE_USERNAME=compose-postgres
      - SPRING_DATASOURCE_PASSWORD=compose-postgres
      - SPRING_JPA_HIBERNATE_DDL_AUTO=update
  redis:
    image: redis:alpine
    container_name: redis
    hostname: redis
    networks:
      - elk-network
    volumes:
      - db_data:/var/lib/redis/data/
    ports:
      - "6379:6379"
  elastic:
    image: elasticsearch:7.14.2
    container_name: elastic
    ports:
      - "9200:9200"
      - "9300:9300"
    networks:
      - elk-network
    environment:
#      ES_JAVA_OPTS: '-Xms256m -Xmx256m'
#      network.bind_host: 0.0.0.0
#      network.host: 0.0.0.0
      discovery.type: single-node
    volumes:
      - db_data:/var/lib/elastic-search/data
  postgres:
    image: postgres:13.1-alpine
    container_name: postgres
    volumes:
      - db_data:/var/lib/postgresql/data/
    ports:
      - "5432:5432"
    networks:
      - elk-network
    environment:
      - POSTGRES_USER=compose-postgres
      - POSTGRES_PASSWORD=compose-postgres
      - POSTGRES_DB=compose-postgres

volumes:
  db_data:

networks:
  elk-network:
    driver: bridge
